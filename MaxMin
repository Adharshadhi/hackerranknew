Problem
----------

You will be given a list of integers, 'arr' , and a single integer 'k'. You must create an array of length 'k' from elements of 'arr' such that its unfairness is minimized. 
Call that array 'arr1'. Unfairness of an array is calculated as:

max(arr1) - min(arr1)

Where:
- max denotes the largest integer in arr1
- min denotes the smallest integer in arr1

Example
--------
Input  = arr=[1,4,7,2] , k=2

Output = 1 ([1,2] => Max(1,2) - Min(1,2) = 1)

Sample INPUT and OUTPUT
------------------------
Input                                            Output

[1,2,3,4,10,20,30,40,100,200], 4      -            3 => Max(1,2,3,4) - Min(1,2,3,4)

My Solution
-------------

public static int maxMin(int k, List<Integer> arr) {
    Collections.sort(arr);
    int result = arr.get(k-1) - arr.get(0);
    int tempCount = k;
    for(int i=0; i<=arr.size()-k; i++){
        if((arr.get(tempCount-1) - arr.get(i)) < result){
            result = arr.get(tempCount-1) - arr.get(i);
        }
        tempCount++;
    }
    return result;
}
